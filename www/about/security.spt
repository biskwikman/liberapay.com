# coding: utf8

liberapay_hof_raw = """
EdOverflow
https://github.com/liberapay/liberapay.com/pull/467
"""

gratipay_hof_raw = """\
Sergey Bobrov https://twitter.com/Black2Fan
https://github.com/gratipay/security-flh0cu/issues/1

BALAJI P R https://www.linkedin.com/in/balagpy
https://github.com/gratipay/security-2a443f/issues/1

BALAJI P R https://www.linkedin.com/in/balagpy
https://github.com/gratipay/security-f4b75c/issues/1

benhc123
https://github.com/gratipay/gratipay.com/issues/2978

Drew Callahan https://www.linkedin.com/pub/drew-callahan/67/62/783
https://github.com/gratipay/security-00001/issues/1

Nitin Goplani http://in.linkedin.com/in/nitingoplani
https://github.com/gratipay/gratipay.com/issues/2235

danishtariq
https://github.com/gratipay/gratipay.com/issues/1536

kudu adamziaja http://adamziaja.com
https://github.com/gratipay/gratipay.com/issues/1460

@Brkay_Aydin
https://twitter.com/Brkay_Aydin/status/377611459942817792

greggles
https://github.com/gratipay/gratipay.com/commit/addbbda0eab0efa2d45272c99e689f7

@kamilsevi
https://github.com/gratipay/gratipay.com/issues/1042

dstufft
https://twitter.com/dstufft/status/319607503061131266

wilkie buttscicles
https://github.com/gratipay/gratipay.com/issues/722

d0ugal jacobian spookylukey
https://github.com/gratipay/gratipay.com/issues/88
"""

parse_twitter = lambda x: [(x, 'https://twitter.com/' + x[1:])]
parse_github = lambda x: [(y, 'https://github.com/' + y) for y in x.split()]
parse_link = lambda x: [x.rsplit(None, 1)]
new_rec = lambda: [[], None]

def parse_hof(raw):
    hof = [new_rec()]
    for line in raw.strip().splitlines():
        if not line:
            hof.append(new_rec())
        elif line.startswith('http'):
            hof[-1][1] = line
        elif line.startswith('@'):
            hof[-1][0] = parse_twitter(line)
        elif ' http' in line:
            hof[-1][0] = parse_link(line)
        else:
            hof[-1][0] = parse_github(line)
    return hof

gratipay_hof = parse_hof(gratipay_hof_raw)
liberapay_hof = parse_hof(liberapay_hof_raw)

[---]
title = _("Security")
[---] text/html
% extends "templates/about.html"
% block content

    <p>If you've found a security issue, and it's not <a href="https://github.com/liberapay/liberapay.com/issues?q=is%3Aissue+is%3Aopen+label%3ASelf-defense">already known</a>, then please <a href="https://hackerone.com/liberapay/reports/new">report it to us through HackerOne</a>.</p>

    <h3>Policy</h3>

    <p>The details of our security policy (scope, rewardsâ€¦) are available in <a href="https://hackerone.com/liberapay">our HackerOne profile</a>.</p>

    <h3>Hall of Fame</h3>

    <p>Thanks to <a href="https://hackerone.com/liberapay/thanks">everyone who has sent us a report through HackerOne</a>.</p>

    % macro show_hof(hof)
    <ol>
        % for researchers, link in hof
        <li>
        % for handle, href in researchers
            <a href="{{ href }}">{{ handle }}</a>{% if not loop.last %}{% if loop.revindex0 == 1 %} &amp; {% else %}, {% endif %}{% endif %}
        % endfor
        &mdash; <a href="{{ link }}">{{ link }}</a>
        </li>
        % endfor
    </ol>
    % endmacro

    <p>Thanks to the following researchers for having reported security issues to us via email:</p>

    {{ show_hof(liberapay_hof) }}

    <p>Thanks to all hackers who have disclosed security issues to
    <a href="https://hackerone.com/gratipay">Gratipay on Hackerone</a>, some of
    which also applied to Liberapay.</p>

    <p>Thanks to the following people for having alerted Gratipay about security issues through other channels:</p>

    {{ show_hof(gratipay_hof) }}

% endblock
